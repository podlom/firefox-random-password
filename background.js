browser.runtime.onMessage.addListener((request, sender, sendResponse) => {
  console.log("üì© –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É background.js:", request);

  if (request.action === "makeRequest") {
    console.log("üîÑ –í–∏–∫–æ–Ω—É—î–º–æ fetch-–∑–∞–ø–∏—Ç...");

    let params = new URLSearchParams();
    params.append('len', request.len);
    params.append('lower', request.lower);
    params.append('upper', request.upper);
    params.append('digit', request.digit);
    params.append('special', request.special);
    params.append('bracket', request.bracket);
    params.append('punctuation', request.punctuation);

    console.log("üåê –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API:", request.url);

    fetch(request.url, {
      method: 'POST',
      body: params
    })
        .then(response => response.text())
        .then(data => {
          console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", data);
          sendResponse({ success: true, data: data });
        })
        .catch(error => {
          console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", error);
          sendResponse({ success: false, error: error.message });
        });

    return true; // –í–∞–∂–ª–∏–≤–æ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏
  }
});
